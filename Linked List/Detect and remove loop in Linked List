/*structure of linked list node:

struct Node
{
    int data;
    Node* next;
    
    Node(int val)
    {
        data = val;
        next = NULL;
    }
};

*/

class Solution
{
 // code here
        // just remove the loop without losing any nodes
    public:
    Node* checkLoop(Node* head)
    {
        if(head==NULL||head->next==NULL)
        {
            
            return NULL;
        }
       Node* slow=head;
       Node* fast=head;
       while(slow!=NULL&&fast!=NULL)
       {
           fast=fast->next;
           if(fast!=NULL)
           {
               fast=fast->next;
           }
           slow=slow->next;
           if(slow==fast)
           {
               return slow;
           }
       }
       return NULL;
    }
    Node* getStart(Node* head,Node* meet)
    {
         Node* slow=head;
         while(slow!=meet)
         {
             slow=slow->next;
             meet=meet->next;
         }
         return slow;
    }
    //Function to remove a loop in the linked list.
    void removeLoop(Node* head)
    {
        Node* meet= checkLoop(head);
        if(meet!=NULL)
        {
            Node* start=getStart(head,meet);
            Node* temp=start->next;
            while(temp->next!=start)
            {
                temp=temp->next;
            }
            temp->next=NULL;
            
            
        }
        
        
       
    }
};
