/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
        ListNode *checkCycle(ListNode *head)
        {
            if(head==NULL||head->next==NULL)
            {
                return NULL;
            }
            ListNode* slow=head;
            ListNode* fast=head;
            while(slow!=NULL&&fast!=NULL)
            {
                fast=fast->next;
                if(fast!=NULL)
                {
                    fast=fast->next;
                }
                slow=slow->next;
                if(slow==fast)
                {
                    return slow;
                }
            }
            return NULL;    
        }
    ListNode *detectCycle(ListNode *head) {
        ListNode *value=checkCycle(head);
        if(value==NULL)
        {
            return NULL;
        }
        else
        {
   ListNode*slow=head;
        ListNode*fast=value;
            while(slow!=fast)
            {
                slow=slow->next;
                fast=fast->next;
            }
            return slow;
        }
        return NULL;
    }
};
