class Solution 
{
    public:
   static bool cmp(Job a, Job b)
    {
        return a.profit>b.profit;
    }
    //Function to find the maximum profit and the number of jobs done.
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        // your code here
        int maxiDead=INT_MIN;
        for(int i=0;i<n;i++)
        {
            maxiDead=max(maxiDead,arr[i].dead);
        }
        vector<int>v(maxiDead+1,-1);
        sort(arr,arr+n,cmp);
        int count=0;
        int total=0;
        for(int i=0;i<n;i++)
        {
            for(int k=arr[i].dead;k>=1;k--)
            {
                if(v[k]==-1)
                {
                    v[k]=arr[i].id;
                    count++;
                    total+=arr[i].profit;
                    break;
                }
            }
        }
        vector<int>ans;
        ans.push_back(count);
        ans.push_back(total);
        return ans;
    } 
    };
