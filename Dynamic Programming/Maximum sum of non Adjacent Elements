RECURSION + MEMOIZATION

#include <bits/stdc++.h> 
int solve(vector<int> &nums,int i,vector<int> &dp)
{
    if(i>=nums.size())
    {
        return 0;
    }
    if(dp[i]!=-1)
    {
        return dp[i];
    }
    
        int pick=nums[i]+solve(nums,i+2,dp);
        int notpick=solve(nums,i+1,dp);
    return dp[i]= max(pick,notpick);
}
int maximumNonAdjacentSum(vector<int> &nums){
    // Write your code here.
    int n=nums.size();
    vector<int>dp(n,-1);
    int ans=solve(nums,0,dp);
    return ans;
}
