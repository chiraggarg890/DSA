#include <bits/stdc++.h> 


RECURSION + MEMOIZATION
/*int solve(vector<int> &num, int tar,vector<int>&dp)
{
    if(tar==0)
    {
        return 1;
    }
    if(tar<0)
    {
        return 0;
    }
    if(dp[tar]!=-1)
    {
        return dp[tar];
    }
    int ans=0;
    for(int i=0;i<num.size();i++)
    {
        ans+=solve(num,tar-num[i],dp);
        dp[tar]=ans;
    }
    return dp[tar];
}*/


TABULATION
int solveTab(vector<int> &num, int tar)
{
    vector<int>dp(tar+1,0);
    dp[0]=1;
 // int ans=0;
    for(int j=1;j<=tar;j++)
    {
    for(int i=0;i<num.size();i++)
    {
        if(j-num[i]>=0)
        {    dp[j]+=dp[j-num[i]];
        }
    }
    }
    return dp[tar];
}


SPACE OPTIMIZATION NOT POSSIBLE 
int findWays(vector<int> &num, int tar)
{
    // Write your code here.
 //   int i=0;
  //  vector<int>dp(tar+1,-1);
   int cnt= solveTab(num,tar);
    return cnt;
}
