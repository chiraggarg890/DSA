#include<bits/stdc++.h>

RECURSION + MEMOIZATION
int solve(int n, int x, int y, int z,vector<int>&dp)
{
    if(n<0)
    {
        return INT_MIN;
    }
    if(n==0)
    {
        return 0;
    }
    if(dp[n]!=-1)
    {
        return dp[n];
    }
   // int maxi=INT_MIN;
     int ans1=1+solve(n-x,x,y,z,dp);
          int ans2=1+solve(n-y,x,y,z,dp);
         int ans3=1+solve(n-z,x,y,z,dp);
        return dp[n]=max(ans1,max(ans2,ans3));
}


TABULATION
int solveTab(int n, int x, int y, int z)
{
    vector<int>dp(n+1,INT_MIN);
    dp[0]=0;
    for(int i=1;i<=n;i++)
    { 
        if(i-x>=0)
 dp[i]=max(dp[i],1+dp[i-x]);
         if(i-y>=0)
           dp[i]=max(dp[i],1+dp[i-y]);
         if(i-z>=0)
         dp[i]=max(dp[i],1+dp[i-z]);
}
    return dp[n];
}

SPACE OPTIMIZATION NOT POSSIBLE

int cutSegments(int n, int x, int y, int z) {
	// Write your code here.
   // vector<int>dp(n+1,-1);
   // int ans=solve(n,x,y,z,dp);
    int ans=solveTab(n,x,y,z);
    if(ans<0)
        return 0;
    else
  return  ans;
}
