/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void solve(TreeNode* root,set<int>&min)
    {
        if(root==NULL)
        {
            return;
        }
        min.insert(root->val);
        solve(root->left,min);
        solve(root->right,min);
    }
    int findSecondMinimumValue(TreeNode* root) {
        set<int>min;
        solve(root,min);
        if(min.size()>1)
        return *(++min.begin());
        else
             return -1;
    }
};
