class Solution {
  public:
    vector <int> bottomView(Node *root) {
        // Your Code Here
        queue<pair<Node*,int>>q;
        map<int,int>topnode;
        vector<int>result;
        if(root==NULL)
        {
            return result;
        }
        q.push(make_pair(root,0));
        while(!q.empty())
        {
            pair<Node*,int>p=q.front();
            q.pop();
            Node* front=p.first;
            int hd=p.second;
            topnode[hd]=front->data;
            if(front->left)
            {
                q.push(make_pair(front->left,hd-1));
            }
            if(front->right)
            {
                q.push(make_pair(front->right,hd+1));
            }
        }
        for(auto i:topnode)
        {
            result.push_back(i.second);
        }
        return result;
    }
};
