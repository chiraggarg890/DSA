/*Complete the code here.
Node is as follows:
struct Node
{
  int data;
  Node* left;
  Node* right;
};
*/
class Solution{
    public:
    void createMapping(int in[],map<int,int>&nodeToIndex,int n)
    {
        for(int i=0;i<n;i++)
        {
            nodeToIndex[in[i]]=i;
        }
    }
  Node* solve(int in[],int pre[],int &index,int start,int end,int n,map<int,int>&nodeToIndex)
  {
      if(index>=n||start>end)
      {
          return NULL;
      }
      int element=pre[index++];
      Node* root=new Node(element);
      int pos=nodeToIndex[element];
      root->left=solve(in,pre,index,start,pos-1,n,nodeToIndex);
      root->right=solve(in,pre,index,pos+1,end,n,nodeToIndex);
      return root;
  }
    Node* buildTree(int in[],int pre[], int n)
    {
        // Code here
        int preIndex=0;
        map<int,int>nodeToIndex;
        createMapping(in,nodeToIndex,n);
        Node* ans=solve(in,pre,preIndex,0,n-1,n,nodeToIndex);
        return ans;
    }
};
