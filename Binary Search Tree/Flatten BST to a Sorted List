/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void preorder(TreeNode* root, vector<int>& preorderVec)
    {
        if(root==NULL)
        {
            return;
        }
        preorderVec.push_back(root->val);
        preorder(root->left,preorderVec);
        preorder(root->right,preorderVec);
    }
    void flatten(TreeNode* root) {
        if(root==NULL)
        {
            return;
        }
        vector<int>preorderVec;
        preorder(root,preorderVec);
        int n=preorderVec.size()-1;
    root->val=preorderVec[0];
        TreeNode* curr=root;
        for(int i=1;i<=n;i++)
        {
            TreeNode* temp=new TreeNode(preorderVec[i]);
            curr->left=NULL;
            curr->right=temp;
            curr=temp;
        }
        curr->left=NULL;
        curr->right=NULL;
    }
};
