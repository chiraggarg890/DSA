/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(TreeNode* root,vector<int>& inorderVec)
    {
        if(root==NULL)
        {
            return;
        }
        inorder(root->left,inorderVec);
        inorderVec.push_back(root->val);
        inorder(root->right,inorderVec);
    }
    bool findTarget(TreeNode* root, int k) {
        vector<int>inorderVec;
        inorder(root,inorderVec);
        int i=0,j=inorderVec.size()-1;int sum=0;
        while(i<j)
        {
            sum=inorderVec[i]+inorderVec[j];
            if(k==sum)
            {
                return true;
            }
            else if(sum<k)
            {
                i++;
            }
            else
            {
                j--;
            }
        }
        return false;
    }
};
