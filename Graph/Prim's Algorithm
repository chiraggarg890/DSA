#include<unordered_map>
#include<list>
#include<limits.h>
using namespace std;
vector<pair<pair<int, int>, int>> calculatePrimsMST(int n, int m, vector<pair<pair<int, int>, int>> &g)
{
    // Write your code here.
    unordered_map<int,list<pair<int,int>>>adj;
    for(int i=0;i<g.size();i++)
    {
        int u=g[i].first.first;
        int v=g[i].first.second;
        int w=g[i].second;
        
        adj[u].push_back({v,w});
        adj[v].push_back({u,w});
    }
    vector<int>parent(n+1);
    vector<int>key(n+1);
    vector<bool>visited(n+1);
    for(int i=0;i<=n;i++)
    {
        parent[i]=-1;
        key[i]=INT_MAX;
        visited[i]=false;
    }
     key[1]=0;
    for(int i=1;i<n;i++)
    {
        int mini=INT_MAX;
        int u;
        for(int j=1;j<=n;j++)
        {
            if(visited[j]==false&&key[j]<mini)
            {
                u=j;
                mini=key[j];
            }
        }
        visited[u]=true;
        for(auto it:adj[u])
        {
            int v=it.first;
            int w=it.second;
            if(visited[v]==false&&w<key[v])
            {
                parent[v]=u;
                key[v]=w;
            }
        }
    }
    vector<pair<pair<int, int>, int>>result;
   for(int i=2;i<=n;i++)
   {
      result.push_back({{parent[i],i},key[i]});
   }
    return result;
}
