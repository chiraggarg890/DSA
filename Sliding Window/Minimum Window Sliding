class Solution {
public:
    string minWindow(string s, string t) {
        unordered_map<char,int>store;
        int i=0,j=0;int mini=INT_MAX;
        for(int k=0;k<t.size();k++)
        {
            store[t[k]]++;
        }
        int count=store.size();string ans="";
        while(j<s.size())
        {
           if(store.find(s[j])!=store.end())
           {
               store[s[j]]--;
               if(store[s[j]]==0)
                   count--;
           }
            if(count==0)
            {
                int temp=mini;
                mini=min(mini,(j-i+1));
                if(temp!=mini)
                {
                    ans=s.substr(i,(j-i+1));
                }
                
                while(count==0)
                {
                    if(store.find(s[i])!=store.end())
                    {  store[s[i]]++;
                    if(store[s[i]]==1)
                    {
                        i++;
                        count++;
                    }
                    else
                    {  i++;
                        int temp=mini;
                mini=min(mini,(j-i+1));
                if(temp!=mini)
                {
                    ans=s.substr(i,(j-i+1));
                }
                    }
                }
                    else 
                    {
                       i++;
                         int temp=mini;
                mini=min(mini,(j-i+1));
                if(temp!=mini)
                {
                    ans=s.substr(i,(j-i+1));
                }
                    }
                }
                j++;
            }
            else if(count>0)
            {
             j++;  
            }
            
        }
        
        return ans;
    }
};
