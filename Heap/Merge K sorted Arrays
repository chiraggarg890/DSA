#include <bits/stdc++.h> 
class node{
    public:
    int data;
    int i;
    int j;
    node(int d, int row,int col)
    {
        this->data=d;
        i=row;
        j=col;
    }
};
class compare{
    public:
    bool operator()(node* a, node* b)
    {
        return a->data>b->data;
    }
};
vector<int> mergeKSortedArrays(vector<vector<int>>&kArrays, int k)
{
    // Write your code here.
    vector<int>ans;
    priority_queue<node*, vector<node*>,compare>pq;
    for(int i=0;i<k;i++)
    {
        node* tmp=new node(kArrays[i][0],i,0);
     pq.push(tmp);   
    }
    while(!pq.empty())
    {
        node* top=pq.top();
        pq.pop();
        ans.push_back(top->data);
        int col=top->j;
        int row=top->i;
        if(col+1<kArrays[row].size())
        {
            node* next=new node(kArrays[row][col+1],row,col+1);
            pq.push(next);
        }
    }
    return ans;
}
